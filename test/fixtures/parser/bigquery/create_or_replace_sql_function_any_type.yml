# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: 39d77feee506ea353720caff56269e439dfe835847320c36c15429e446dad20b
file:
  statement:
    create_function_statement:
    - keyword: CREATE
    - binary_operator: OR
    - keyword: REPLACE
    - keyword: FUNCTION
    - function_name:
        function_name_identifier: qs
    - base:
        bracketed:
        - start_bracket: (
        - parameter: y
        - keyword: ANY
        - keyword: TYPE
        - end_bracket: )
    - base:
        keyword: AS
        bracketed:
          start_bracket: (
          expression:
            case_expression:
            - keyword: CASE
            - keyword: WHEN
            - expression:
                column_reference:
                  identifier: y
                comparison_operator: '='
                literal: '1'
            - keyword: THEN
            - expression:
                literal: "'low'"
            - keyword: WHEN
            - expression:
                column_reference:
                  identifier: y
                comparison_operator: '='
                literal: '2'
            - keyword: THEN
            - expression:
                literal: "'midlow'"
            - keyword: WHEN
            - expression:
                column_reference:
                  identifier: y
                comparison_operator: '='
                literal: '3'
            - keyword: THEN
            - expression:
                literal: "'mid'"
            - keyword: WHEN
            - expression:
                column_reference:
                  identifier: y
                comparison_operator: '='
                literal: '4'
            - keyword: THEN
            - expression:
                literal: "'midhigh'"
            - keyword: WHEN
            - expression:
                column_reference:
                  identifier: y
                comparison_operator: '='
                literal: '5'
            - keyword: THEN
            - expression:
                literal: "'high'"
            - keyword: ELSE
            - expression:
                literal: '"unknown"'
            - keyword: END
          end_bracket: )
