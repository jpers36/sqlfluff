# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: 9000d23493a6d228b7be5a14fa7ae90a9ea4b2d016a34239e494d15a3ef965b2
file:
  statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          function:
            function_name:
              function_name_identifier: SUM
            bracketed:
              start_bracket: (
              expression:
                case_expression:
                - keyword: CASE
                - keyword: WHEN
                - expression:
                  - column_reference:
                      identifier: value
                  - comparison_operator: '!='
                  - column_reference:
                      identifier: previous_value
                - keyword: THEN
                - expression:
                    literal: '1.0'
                - keyword: ELSE
                - expression:
                    literal: '0.0'
                - keyword: END
              end_bracket: )
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              bracketed:
                start_bracket: (
                select_statement:
                  select_clause:
                  - keyword: SELECT
                  - select_clause_element:
                      column_reference:
                        identifier: value
                  - comma: ','
                  - select_clause_element:
                      expression:
                        case_expression:
                        - keyword: CASE
                        - keyword: WHEN
                        - expression:
                            column_reference:
                              identifier: ix
                            comparison_operator: '!='
                            literal: '0'
                        - keyword: THEN
                        - expression:
                            function:
                              function_name:
                                function_name_identifier: LAG
                              bracketed:
                                start_bracket: (
                                expression:
                                  column_reference:
                                    identifier: value
                                end_bracket: )
                              over_clause:
                                keyword: OVER
                                bracketed:
                                  start_bracket: (
                                  window_specification:
                                    orderby_clause:
                                    - keyword: ORDER
                                    - keyword: BY
                                    - column_reference:
                                        identifier: ix
                                    - keyword: ASC
                                  end_bracket: )
                        - keyword: ELSE
                        - expression:
                            column_reference:
                              identifier: value
                        - keyword: END
                      alias_expression:
                        keyword: AS
                        identifier: previous_value
                  from_clause:
                    keyword: FROM
                    from_expression:
                      from_expression_element:
                      - table_expression:
                          function:
                            function_name:
                              function_name_identifier: UNNEST
                            bracketed:
                              start_bracket: (
                              expression:
                                column_reference:
                                - identifier: sequence_validation_and_business_rules
                                - dot: .
                                - identifier: sequence_validation_and_business_rules
                              end_bracket: )
                      - alias_expression:
                          keyword: AS
                          identifier: value
                      - keyword: WITH
                      - keyword: OFFSET
                      - keyword: AS
                      - identifier: ix
                end_bracket: )
