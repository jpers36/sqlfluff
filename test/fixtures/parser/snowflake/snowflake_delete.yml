# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: bba1031dd85ce7c9672b2c2b8121f860fdf76d9ac09e35cad0a4d804ac59b0c6
file:
- statement:
    delete_statement:
      keyword: DELETE
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                identifier: x
      using_clause:
      - keyword: USING
      - from_expression_element:
          table_expression:
            table_reference:
              identifier: y
      - comma: ','
      - from_expression_element:
          table_expression:
            table_reference:
              identifier: z
- statement_terminator: ;
- statement:
    delete_statement:
      keyword: DELETE
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                identifier: x
      where_clause:
        keyword: WHERE
        expression:
        - literal: '1'
        - comparison_operator: '='
        - literal: '2'
- statement_terminator: ;
- statement:
    delete_statement:
      keyword: delete
      from_clause:
        keyword: from
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                identifier: leased_bicycles
      using_clause:
        keyword: using
        from_expression_element:
          table_expression:
            table_reference:
              identifier: returned_bicycles
      where_clause:
        keyword: where
        expression:
        - column_reference:
          - identifier: leased_bicycles
          - dot: .
          - identifier: bicycle_id
        - comparison_operator: '='
        - column_reference:
          - identifier: returned_bicycles
          - dot: .
          - identifier: bicycle_id
- statement_terminator: ;
- statement:
    delete_statement:
      keyword: delete
      from_clause:
        keyword: from
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                identifier: leased_bicycles
      using_clause:
        keyword: using
        from_expression_element:
          table_expression:
            bracketed:
              start_bracket: (
              select_statement:
                select_clause:
                  keyword: select
                  select_clause_element:
                    column_reference:
                      identifier: bicycle_id
                    alias_expression:
                      keyword: as
                      identifier: bicycle_id
                from_clause:
                  keyword: from
                  from_expression:
                    from_expression_element:
                      table_expression:
                        table_reference:
                          identifier: returned_bicycles
              end_bracket: )
          alias_expression:
            keyword: as
            identifier: returned
      where_clause:
        keyword: where
        expression:
        - column_reference:
          - identifier: leased_bicycles
          - dot: .
          - identifier: bicycle_id
        - comparison_operator: '='
        - column_reference:
          - identifier: returned
          - dot: .
          - identifier: bicycle_id
- statement_terminator: ;
- statement:
    delete_statement:
      keyword: delete
      from_clause:
        keyword: from
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                identifier: leased_bicycles
      using_clause:
        keyword: using
        from_expression_element:
          table_expression:
            bracketed:
              start_bracket: (
              select_statement:
                select_clause:
                  keyword: select
                  select_clause_element:
                    column_reference:
                      identifier: bicycle_id
                    alias_expression:
                      keyword: as
                      identifier: bicycle_id
                from_clause:
                  keyword: from
                  from_expression:
                    from_expression_element:
                      table_expression:
                        table_reference:
                          identifier: returned_bicycles
                where_clause:
                  keyword: where
                  expression:
                  - literal: '1'
                  - comparison_operator: '='
                  - literal: '2'
              end_bracket: )
          alias_expression:
            keyword: as
            identifier: returned
      where_clause:
        keyword: where
        expression:
        - column_reference:
          - identifier: leased_bicycles
          - dot: .
          - identifier: bicycle_id
        - comparison_operator: '='
        - column_reference:
          - identifier: returned
          - dot: .
          - identifier: bicycle_id
- statement_terminator: ;
