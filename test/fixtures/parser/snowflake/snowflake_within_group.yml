# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: 0abeedb6f2cddd1a2172589df74754869bd57bc1bd5a867c346580279ed8ecaf
file:
  statement:
    with_compound_statement:
      keyword: with
      common_table_expression:
        identifier: favourite_fruits
        keyword: as
        bracketed:
          start_bracket: (
          select_statement:
            select_clause:
            - keyword: select
            - select_clause_element:
                column_reference:
                  identifier: column1
                alias_expression:
                  keyword: as
                  identifier: name
            - comma: ','
            - select_clause_element:
                column_reference:
                  identifier: column2
                alias_expression:
                  keyword: as
                  identifier: colour
            from_clause:
              keyword: from
              from_expression:
                from_expression_element:
                  table_expression:
                    bracketed:
                      start_bracket: (
                      values_clause:
                      - keyword: values
                      - bracketed:
                        - start_bracket: (
                        - expression:
                            literal: "'apple'"
                        - comma: ','
                        - expression:
                            literal: "'green'"
                        - end_bracket: )
                      - comma: ','
                      - bracketed:
                        - start_bracket: (
                        - literal: "'unripe banana'"
                        - comma: ','
                        - literal: "'green'"
                        - end_bracket: )
                      - comma: ','
                      - bracketed:
                        - start_bracket: (
                        - literal: "'kiwi'"
                        - comma: ','
                        - literal: "'green'"
                        - end_bracket: )
                      - comma: ','
                      - bracketed:
                        - start_bracket: (
                        - literal: "'blueberry'"
                        - comma: ','
                        - literal: "'blue'"
                        - end_bracket: )
                      - comma: ','
                      - bracketed:
                        - start_bracket: (
                        - literal: "'strawberry'"
                        - comma: ','
                        - literal: "'red'"
                        - end_bracket: )
                      - comma: ','
                      - bracketed:
                        - start_bracket: (
                        - literal: "'grape'"
                        - comma: ','
                        - literal: "'red'"
                        - end_bracket: )
                      end_bracket: )
          end_bracket: )
      select_statement:
        select_clause:
        - keyword: select
        - select_clause_element:
            column_reference:
              identifier: colour
        - comma: ','
        - select_clause_element:
            function:
              function_name:
                function_name_identifier: listagg
              bracketed:
              - start_bracket: (
              - expression:
                  column_reference:
                    identifier: name
              - comma: ','
              - expression:
                  literal: "', '"
              - end_bracket: )
              withingroup_clause:
              - keyword: within
              - keyword: group
              - bracketed:
                  start_bracket: (
                  orderby_clause:
                  - keyword: order
                  - keyword: by
                  - column_reference:
                      identifier: name
                  end_bracket: )
            alias_expression:
              keyword: as
              identifier: fruits
        from_clause:
          keyword: from
          from_expression:
            from_expression_element:
              table_expression:
                table_reference:
                  identifier: favourite_fruits
        groupby_clause:
        - keyword: group
        - keyword: by
        - column_reference:
            identifier: colour
