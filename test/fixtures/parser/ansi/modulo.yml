# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: 8185d366b1449d3fc39f81ce7f4a3b44b56e732e3346967a9d742a0c718af685
file:
  statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          expression:
            case_expression:
            - keyword: CASE
            - keyword: WHEN
            - expression:
              - bracketed:
                  start_bracket: (
                  expression:
                  - column_reference:
                      identifier: year_number
                  - binary_operator: '%'
                  - literal: '400'
                  - comparison_operator: '='
                  - literal: '0'
                  end_bracket: )
              - binary_operator: OR
              - bracketed:
                  start_bracket: (
                  expression:
                  - column_reference:
                      identifier: year_number
                  - binary_operator: '%'
                  - literal: '4'
                  - comparison_operator: '='
                  - literal: '0'
                  - binary_operator: AND
                  - column_reference:
                      identifier: year_number
                  - binary_operator: '%'
                  - literal: '100'
                  - comparison_operator: '!='
                  - literal: '0'
                  end_bracket: )
            - keyword: THEN
            - expression:
                literal: 'TRUE'
            - keyword: ELSE
            - expression:
                literal: 'FALSE'
            - keyword: END
          alias_expression:
            keyword: AS
            identifier: is_leap_year
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                identifier: mytable
