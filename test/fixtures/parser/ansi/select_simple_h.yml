# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: 8c9738ee9c4f570a2f1ed4558e8048bd1cdc313fefd6474e0ac15d0460b53c37
file:
  statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          expression:
            function:
              function_name:
                function_name_identifier: dateadd
              bracketed:
              - start_bracket: (
              - expression:
                  literal: "'day'"
              - comma: ','
              - expression:
                  function:
                    function_name:
                      function_name_identifier: row_number
                    bracketed:
                      start_bracket: (
                      end_bracket: )
                    over_clause:
                      keyword: OVER
                      bracketed:
                        start_bracket: (
                        window_specification:
                          orderby_clause:
                          - keyword: ORDER
                          - keyword: BY
                          - expression:
                              function:
                                function_name:
                                  function_name_identifier: seq8
                                bracketed:
                                  start_bracket: (
                                  end_bracket: )
                          - keyword: asc
                        end_bracket: )
              - comma: ','
              - expression:
                  literal: "'2014-01-01'"
              - end_bracket: )
            cast_expression:
              casting_operator: '::'
              data_type:
                data_type_identifier: date
          alias_expression:
            keyword: AS
            identifier: dt
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                identifier: boo
