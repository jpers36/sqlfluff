# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: 7b8abf6a50370b547d156aabb25f6311f8f2c0c8567bc04f6993338bc82490a6
file:
- base:
    select_statement:
      select_clause:
        keyword: select
        select_clause_element:
          wildcard_expression:
            wildcard_identifier:
              star: '*'
      from_clause:
      - keyword: from
      - from_expression:
          from_expression_element:
            table_expression:
              values_clause:
                keyword: values
                delimited_values:
                  scalar_value:
                    literal: '1'
      - comma: ','
      - from_expression:
          from_expression_element:
            table_expression:
              values_clause:
                keyword: values
                delimited_values:
                  scalar_value:
                    literal: '2'
- statement_terminator: ;
- base:
    select_statement:
      select_clause:
        keyword: select
        select_clause_element:
          wildcard_expression:
            wildcard_identifier:
              star: '*'
      from_clause:
      - keyword: from
      - from_expression:
          from_expression_element:
            bracketed:
              start_bracket: (
              table_expression:
                values_clause:
                  keyword: values
                  delimited_values:
                  - scalar_value:
                      literal: '1'
                  - comma: ','
                  - scalar_value:
                      literal: '2'
              end_bracket: )
      - comma: ','
      - from_expression:
          from_expression_element:
            bracketed:
              start_bracket: (
              table_expression:
                values_clause:
                  keyword: values
                  delimited_values:
                  - scalar_value:
                      literal: '2'
                  - comma: ','
                  - scalar_value:
                      literal: '3'
              end_bracket: )
- statement_terminator: ;
